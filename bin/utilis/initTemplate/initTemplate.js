"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"initTemplate",{enumerable:true,get:()=>initTemplate});const _path=_interopRequireDefault(require("path"));const _fs=_interopRequireDefault(require("fs"));const _kolorist=require("kolorist");const _utili=require("../utili");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function createFolderIfNotExist(folderName){try{const folderPath=_path.default.join(process.cwd(),folderName);if(!_fs.default.existsSync(folderPath)){_fs.default.mkdirSync(folderPath);console.log("Success to create folder",(0,_kolorist.yellow)(folderName));return true}else{console.log((0,_kolorist.lightRed)("Folder"),(0,_kolorist.yellow)(folderName),(0,_kolorist.lightRed)("already exist."));return false}}catch(error){console.log((0,_kolorist.lightRed)(error.message));return false}}function genInsideFile(folderName,fileName){let[finalfileName,dataText]=(0,_utili.createCompTest)(true,"Comp",fileName);let currentPath=_path.default.join(process.cwd(),folderName,finalfileName);_fs.default.writeFileSync(currentPath,dataText)}function initTemplate(){const folderList=["pages","interface","components"].map(v=>createFolderIfNotExist(v));if(folderList[0]){genInsideFile("pages","homePage");genInsideFile("pages","otherPage")}if(folderList[2]){genInsideFile("components","appleComp")}console.log((0,_kolorist.cyan)("Done, enjoy your new project :)"))}