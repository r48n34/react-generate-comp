"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"initTemplate",{enumerable:true,get:()=>initTemplate});const _prompts=_interopRequireDefault(require("prompts"));const _kolorist=require("kolorist");const _rawGen=require("./rawGen");const _rtkGen=require("./rtkGen");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function initTemplate(){return _initTemplate.apply(this,arguments)}function _initTemplate(){_initTemplate=_asyncToGenerator(function*(){try{const questions=[{type:"select",name:"type",message:"Select a template to generate",choices:[{title:(0,_kolorist.lightYellow)("Raw"),value:"raw"},{title:(0,_kolorist.cyan)("RTK react"),value:"rtk"}]},{type:"select",name:"lang",message:"Select a languages",choices:[{title:(0,_kolorist.blue)("Typescript"),value:"ts"},{title:(0,_kolorist.yellow)("Javascript"),value:"js"}]}];const resPrompt=yield(0,_prompts.default)(questions,{onCancel:()=>{throw new Error("Prompt stopped")}});const isTypescript=resPrompt.lang==="ts";if(resPrompt.type==="raw"){(0,_rawGen.rawGen)(isTypescript)}else if(resPrompt.type==="rtk"){(0,_rtkGen.rtkGen)(isTypescript)}console.log((0,_kolorist.cyan)("\nDone! Enjoy your new project :)"))}catch(error){return}});return _initTemplate.apply(this,arguments)}